db: reader
collections: sessions
			 users
			 articles
			 sections

=============================================

Access Patterns
	- Visit home page to review top articles
	- Select an article
		- Consume while being content is being re-inforced (via tests, examples, etc)
		- Easily select separate sections (based on availability)
		- Walk away knowing how well you understood the content
		
What's an Article?
	- Simple 1 section article covering a small slice of a subject
	- Elaborate multi-section article diving deep into a subject
	
	Both put emphasis on testing the reader 
		- Articles MUST include examples and questions that put the reader into action

How about courses? (later)
	- Once articles fill out, a collection of articles that can step someone through understanding 
	  something from A to Z
	
	Say, for example, we have these articles:
		Learning Swift From the Ground Up
		Understanding the iOS SDK
		Building an iOS App from the ground up
		Mastering iOS
		
		These articles could be gathered into a course that someone could follow. Ideally, this content
		would be from the SAME instructor/author... The author would be empowered to release articles, then
		curate them into a course when they are ready.
		
=============================================


Manage sessions
---------------
	session
		_id			
		email			

Managing users
--------------
	user
		_id				
		email	
		password
		name
		username
		biography
		admin
		photo_url
		social
			twitter
			blog
		authored [ ]		used to fetch the articles authored by this user
			_id
			title
			language
		purchased [ ]		used to fetch the purchased articles by this user
			_id
			title
			language
		created
		updated		

Building articles
-----------------

	Do we embed sections (+layouts) or keep it as an array of _ids? 
		- we'll never load the entire article in one shot... it'll always be in sections
		- we'll never just randomly access a layout item
			Sections + layout items should definitely be together
		- we will request individual sections
		
	Need to figure out what other metadata we'll want in order to display an article home page
		
	article 
		_id
		title
		language
		rating
		published
		created
		updated
		
		author				populate & sync to reduce round-trips
			_id
			name			first + last
			social			so we can help build their audience
				twitter		
				blog
			photo_url		so we can display their photo on the article hero
			
		sections [ ]
			_id	
		
		
Article details
---------------

	Think of a section like a chapter. A chapter has a unique layout which will help with
	consistency.
	
	section
		_id
		index			An author may decide to move a section to a different position in the article
		locked			An author may decide to put this section behind a paywall
		title
		description		Short 'what this section is about'
		rating
		published
		created
		updated
		
		blocks [ ]
			style			Make it easier to understand how to render this block
			header
			body
			code
			media [ ]		Sequence of images/movies to cycle through for this element
				media_url
			steps [{ }]
				title
				media_url
			questions [{ }]
				answer
				items [ ]
					title
			download { }
				extension
				path